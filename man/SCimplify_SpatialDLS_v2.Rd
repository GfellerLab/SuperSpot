% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCimplify_SpatialDLS_v2.R
\name{SCimplify_SpatialDLS_v2}
\alias{SCimplify_SpatialDLS_v2}
\title{Detection of metaspots with the SuperSpot approach}
\usage{
SCimplify_SpatialDLS_v2(
  X,
  spotPositions,
  col.x = "imagecol",
  col.y = "imagerow",
  k.spots = 1,
  method_similarity = "3",
  method_knn = "1",
  method_normalization = "log_normalize",
  method_reduction = "PCA",
  split_not_connected = TRUE,
  split_annotation = NULL,
  split_vector,
  sigs = 1000,
  cell.annotation = NULL,
  cell.split.condition = NULL,
  gamma = 10,
  k.knn = 6,
  n.dim = 1:30,
  n.cpu = NULL,
  plot.graph = FALSE,
  pct = 0.6,
  dist.thresh = NULL,
  seed = 12345,
  genes.use = NULL,
  igraph.clustering = c("walktrap", "fast_greedy"),
  return.singlecell.NW = TRUE,
  return.hierarchical.structure = TRUE,
  return.seurat.object = FALSE,
  ...
)
}
\arguments{
\item{X}{raw count matrix with rows to be genes and cols to be cells}

\item{spotPositions}{a data.frame of the coordinates of the spots}

\item{col.x}{a character of the name of the x coordinates to get from the coordinates data frame}

\item{col.y}{a character of the name of the y coordinates to get from the coordinates data frame}

\item{k.spots}{number of neighborhoods to take into account when choosing the second method to build the KNN}

\item{method_similarity}{method to compute transcriptional similarity from distance
\itemize{
\item "1" - similarity = 1 - (distance/max(distance))
\item "2" - similarity = exp(-(distance^2)/sigma)
\item "3" - similarity = proxy::pr_dist2simil(distance)
}}

\item{method_knn}{method to compute the KNN
\itemize{
\item "1" - KNN is built with RANN::nn2() function (default)
\item "2" - KNN is built by computing every distances between each spot and filtered by choosing the number of neighborhoods to take into account
}}

\item{method_normalization}{method for normalization of the raw count matrix
\itemize{
\item "log_normalize" for a Seurat Log Normalization
\item "SCT" for a Seurat SCT Normalization
\item "no" for using raw counts
}}

\item{method_reduction}{method for performing dimension reduction on which the weights for the KNN will be computed
\itemize{
\item "PCA" for using PCA
\item "NMF" for using NMF
\item "genes.list" for directly using a vector of genes instead of dimension reduction
}}

\item{split_not_connected}{split or not the spots in the KNN graph if their distance is too far compared to the others}

\item{split_annotation}{split or not the spots in the KNN graph based on their annotation}

\item{split_vector}{vector of the spots annotations on which the KNN will be split}

\item{sigs}{parameter when computing the transcriptional similarity with method "2"}

\item{cell.annotation}{a vector of cell type annotation, if provided, metacells that contain single cells of different cell type annotation will be split in multiple pure metacell (may result in slightly larger numbe of metacells than expected with a given gamma)}

\item{cell.split.condition}{a vector of cell conditions that must not be mixed in one metacell. If provided, metacells will be split in condition-pure metacell (may result in significantly(!) larger number of metacells than expected)}

\item{gamma}{graining level of data (proportion of number of single cells in the initial dataset to the number of metacells in the final dataset)}

\item{k.knn}{parameter to compute single-cell kNN network}

\item{n.dim}{number of dimensions to compute for dimension reduction}

\item{n.cpu}{number of cpu to use during parallelized computation of distances. By default, the maximum amount of cpu available is chosen automatically. But if your computer doesn't support it, please specify your desired number of cpu.}

\item{plot.graph}{boolean of whether or not plotting the KNN graph}

\item{pct}{percentage of the connections to keep}

\item{dist.thresh}{fixed value to use instead of using a percentage to filter out connections}

\item{seed}{seed to use to subsample cells for an approximate approach}

\item{genes.use}{genes to use when "method_reduction = 'genes.list'"}

\item{igraph.clustering}{clustering method to identify metacells (available methods "walktrap" (default) and "fast greedy" (recommended for VisiumHD so far)).}

\item{return.singlecell.NW}{whether return single-cell network}

\item{return.hierarchical.structure}{whether return hierarchical structure of metacell}

\item{return.seurat.object}{whether return seurat object of spots used to computed PCA}

\item{...}{other parameters of \link{build_knn_graph} function}
}
\value{
a list with components
\itemize{
\item graph.supercells - igraph object of a simplified network (number of nodes corresponds to number of metacells)
\item membership - assigmnent of each single cell to a particular metacell
\item graph.singlecells - igraph object (kNN network) of single-cell data
\item supercell_size - size of metacells (former super-cells)
\item gamma - requested graining level
\item N.SC - number of obtained metacells
\item n.pc - number of principal components used for metacells construction
\item k.knn - number of neighbors to build single-cell graph
\item k.spots - number of neighborhood used if method_knn was "2"
\item sigs - sigma parameter used if method_similarity was "2"
\item method_similarity - used similarity method
\item method_knn - used KNN method
\item method_normalization - used normalization method
\item sc.cell.annotation. - single-cell cell type annotation (if provided)
\item sc.cell.split.condition. - single-cell split condition (if provided)
\item SC.cell.annotation. - super-cell cell type annotation (if was provided for single cells)
\item SC.cell.split.condition. - super-cell split condition (if was provided for single cells)

}
}
\description{
This function detects metaspots  from spatial transcriptomics data
}
